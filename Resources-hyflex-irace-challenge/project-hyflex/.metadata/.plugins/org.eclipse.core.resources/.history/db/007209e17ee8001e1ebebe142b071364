package aimLab8;

import AbstractClasses.HyperHeuristic;
import AbstractClasses.ProblemDomain;
import AbstractClasses.ProblemDomain.HeuristicType;

public class SCF_AM_HH extends HyperHeuristic {

	public SCF_AM_HH(long seed) {

		super(seed);
	}

	/**
	 * TODO - Implement a selection hyper-heuristic using the simplified choice function (SCF)
	 * 		  heuristic selection method accepting all moves (AM).
	 *
	 * PSEUDOCODE:
	 *
	 * INPUT: problem_instance
	 * hs <- { MTN } U { RR } U { LS }
	 * s <- initialiseSolution();
	 * scf <- initialiseNewSimplifiedChoiceFunctionMethod();
	 *
	 * WHILE termination criterion is not met DO
	 *
	 *     h <- scf.selectHeuristicToApply();
	 *     setHeuristicParameterSettings(iom, dos);
	 *     s' <- h(s);
	 *
	 *     scf.updateHeuristicData(h_i, t, t_delta, f(s), f(s'));
	 *
	 *     accept();
	 *
	 * END_WHILE
	 *
	 * return s_{best};
	 */
	public void solve(ProblemDomain problem) {

		// TODO implementation of SCF_AM_HH
	}

	public String toString() {

		return "SCF_AM_HH";
	}

}
